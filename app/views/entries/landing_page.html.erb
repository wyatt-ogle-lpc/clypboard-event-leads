<!DOCTYPE html>
<html>
  <head >
    <title>Lead Entry</title>
    <!-- Google Fonts: Bebas Neue -->
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.dig(:google_maps, :api_key) %>&libraries=places&callback=initAutocomplete" async defer></script>

    <%= stylesheet_link_tag 'application', media: 'all' %>
  </head>
  <body>
    <header class="page-header">
      <div class="logo-wrap">
        <%= image_tag "logo.png", alt: "Logo", class: "logo" %>
      </div>

      <div class="title-wrap">
        <h1>Enter Your Information</h1>
        <h3>click submit to play a game</h3>
      </div>

      <!-- invisible spacer to keep the title perfectly centered -->
      <div class="balancer" aria-hidden="true"></div>
    </header>



    <%= form_with model: @entry,
    url: @expo.present? ? expo_entries_path(@expo) : entries_path,
    data: { turbo: false },
    local: true,
    html: { id: "entry_form" } do |form| %>
      <!-- Expo name setter (hidden automatically if URL already has one) -->
      <div id="expo_setter" class="form-field" style="margin-bottom: 12px;">
        <label for="expo_name">Expo / Raffle Name</label>
        <input type="text" id="expo_name" placeholder="Enter expo name" />
        <button type="button" id="set_expo_btn" class="btn" style="margin-left: 8px;">
          Submit Expo
        </button>
      </div>

      <div class="form-row">
      <div class="form-field">
        <%= form.label :name, ("Name <span style='color: #d03e3e;'>*</span>").html_safe %>
        <%= form.text_field :name, required: true, placeholder: "John Smith" %>
        <% if @entry.errors[:name].any? %>
          <p class="error"><%= @entry.errors[:name].join(", ") %></p>
        <% end %>
      </div>
      <div class="form-field">
      <%= form.label :company_name, "Company" %>
      <%= form.text_field :company_name, placeholder: "Lloyd Pest Control" %>
      <% if @entry.errors[:company_name].any? %>
        <p class="error"><%= @entry.errors[:company_name].join(", ") %></p>
      <% end %>
      </div>
    </div>

    <div class="form-row">
      <div class="form-field">
        <%= form.label :property_name, "Property Name" %>
        <%= form.text_field :property_name, placeholder: "LPC Corporate Office" %>
        <% if @entry.errors[:property_name].any? %>
          <p class="error"><%= @entry.errors[:property_name].join(", ") %></p>
        <% end %>
      </div>
      <div class="form-field">
        <%= form.label :address, ("Property Address <span style='color: #d03e3e;'>*</span>").html_safe %>
        <%= form.text_field :address, required: true, placeholder: "1234 Friars Way", id: "entry_address" %>
        <% if @entry.errors[:address].any? %>
          <p class="error"><%= @entry.errors[:address].join(", ") %></p>
        <% end %>
      </div>
    </div>

    <div class="form-row">
      <div class="form-field">
        <%= form.label :email, ("Email <span style='color: #d03e3e;'>*</span>").html_safe %>
        <%= form.email_field :email, required: true, placeholder: "you@email.com" %>
        <% if @entry.errors[:email].any? %>
          <p class="error"><%= @entry.errors[:email].join(", ") %></p>
        <% end %>
      </div>
      <div class="form-field">
        <%= form.label :phone_number, ("Phone Number <span style='color: #d03e3e;'>*</span>").html_safe %>
        <%= form.telephone_field :phone_number, required: true, placeholder: "(123) 456-7890", id: "phone_number" %>
        <% if @entry.errors[:phone_number].any? %>
          <p class="error"><%= @entry.errors[:phone_number].join(", ") %></p>
        <% end %>
      </div>
    </div>

<div class="form-row">
  <!-- Comments: Take full left width -->
  <div class="form-field" style="margin-right: 16px; min-width: 0;">
    <%= form.label :comments, "Comments" %>
    <%= form.text_area :comments, rows: 2.5, placeholder: "Feel free to enter any additional notes..." %>
    <% if @entry.errors[:comments].any? %>
    <p class="error"><%= @entry.errors[:comments].join(", ") %></p>
  <% end %>
  </div>
  <!-- Checkboxes: 2x2 grid on right -->
  <div class="form-field checkbox-field" style="flex: 1; min-width: 180px;">
    <%= form.label :options, "Select Issues" %>
    <div class="checkbox-group">
  
      <label><%= form.check_box :general_pest %> General Pest</label>
      <label><%= form.check_box :termites %> Termites</label>
      <label><%= form.check_box :rodents %> Rodents</label>
      <label><%= form.check_box :bedbugs %> Bedbugs</label>
      <label><%= form.check_box :other %> Other</label>
    </div>
  </div>
</div>
  

    <div class="form-actions">
      <%= form.submit "Submit", class: "btn" %>
    </div>

    <% end %>

   <script>
function initAutocomplete() {
  var input = document.getElementById('entry_address');
  if (input && typeof google !== "undefined" && google.maps && google.maps.places) {
    new google.maps.places.Autocomplete(input, {
      types: ['address'],
      componentRestrictions: { country: 'us' }
    });
  }
}

window.gm_authFailure = function() {
  console.error('Google Maps auth failed (key/referrer/billing).');
  alert('Maps/Places failed to load. Check API key, billing, and referrer restrictions.');
};

document.addEventListener("DOMContentLoaded", function() {
  // Phone formatting
  var phone = document.getElementById("phone_number");
  if (phone) {
    phone.addEventListener("input", function() {
      var x = phone.value.replace(/\D/g, '').substring(0,10);
      var f = "";
      if (x.length > 0) f = "(" + x.substring(0,3);
      if (x.length >= 4) f += ") " + x.substring(3,6);
      if (x.length >= 7) f += "\u2009-\u2009" + x.substring(6,10);
      phone.value = f;
    });
  }

  // Google Places init (defer-safe)
  if (typeof google !== "undefined" && google.maps && google.maps.places) {
    initAutocomplete();
  } else {
    window.initAutocomplete = initAutocomplete;
  }

  // --- Expo name redirect logic ---
  const expoSetter = document.getElementById("expo_setter");
  const expoInput  = document.getElementById("expo_name");
  const expoBtn    = document.getElementById("set_expo_btn");
  const form       = document.getElementById("entry_form");

  // Detect /entries/:expoName
  const parts = window.location.pathname.split("/").filter(Boolean);
  const expoFromUrl = (parts.length >= 2 && parts[0] === "entries") ? parts[1] : null;

  // If already on /entries/:expoName, hide the setter and ensure form posts to that URL
  if (expoFromUrl && expoSetter) {
    expoSetter.style.display = "none";
    if (form) {
      // Ensure POST goes to /entries/:expoName
      form.action = form.action.replace(/\/$/, "") + "/" + encodeURIComponent(expoFromUrl);
    }
  }

  // When user clicks "Submit Expo", redirect to /entries/:expoName and hide the section
  if (expoBtn && expoInput) {
    expoBtn.addEventListener("click", function() {
      const name = expoInput.value.trim();
      if (!name) { expoInput.focus(); return; }

      // Hide immediately for clean UX
      if (expoSetter) expoSetter.style.display = "none";

      // Build target: /entries/:expoName
      const base = (function() {
        // If your form.action points to /entries (or /expo/:expo_id/entries), keep it simple:
        // The user explicitly requested url/entries/:expo_name
        return window.location.origin + "/entries";
      })();

      window.location.href = base.replace(/\/$/, "") + "/" + encodeURIComponent(name);
    });
  }
});
</script>

    



  </body>
</html>
